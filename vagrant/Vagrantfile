
Vagrant.configure(2) do |config|

  config.vm.define "bastion" do |bastion|
    $script= <<-SCRIPT
    yum install -y git python-passlib httpd-tools java-1.8.0-openjdk-devel telnet
    yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    sed -i -e "s/^enabled=1/enabled=0/" /etc/yum.repos.d/epel.repo
    yum -y --enablerepo=epel install ansible pyOpenSSL
    
    cat id_rsa.pub >> .ssh/authorized_keys
    chown vagrant.vagrant /home/vagrant/.ssh/*
    chmod 600 /home/vagrant/.ssh/*

    if [ ! -d openshift-ansible ]
    then
       git clone https://github.com/openshift/openshift-ansible
       (cd openshift-ansible &&  git checkout release-3.9)
    fi

    SCRIPT

    bastion.vm.box = "centos/7"
    bastion.vm.network "private_network", ip: "10.1.3.4"
    bastion.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.memory = "1024"
    end
    bastion.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "id_rsa.pub"
    bastion.vm.provision "file", source: "id_rsa.pub", destination: ".ssh/id_rsa.pub"
    bastion.vm.provision "file", source: "id_rsa", destination: ".ssh/id_rsa"
    bastion.vm.provision "file", source: "../openshift.yaml", destination: "openshift.yaml"
    bastion.vm.provision "file", source: "../hosts", destination: "hosts"
    bastion.vm.provision "file", source: "ssh_config", destination: ".ssh/config"

    bastion.vm.provision "shell", inline: $script
  end


  config.vm.define "master" do |master|
    $script = <<-SCRIPT
      cat id_rsa*.pub >> .ssh/authorized_keys
    SCRIPT

    master.vm.box = "centos/7"
    master.vm.network "private_network", ip: "10.1.3.2"
    master.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.memory = "4096"
    end
    master.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "id_rsa1.pub"
    master.vm.provision "file", source: "id_rsa.pub", destination: "id_rsa2.pub"
    master.vm.provision "shell", inline: $script
  end

  config.vm.define "node1" do |node1|
    $script = <<-SCRIPT
      cat id_rsa*.pub >> .ssh/authorized_keys

    SCRIPT


    node1.vm.box = "centos/7"
    node1.vm.network "private_network", ip: "10.1.3.3"
    node1.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.memory = "4096"
    end
    node1.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "id_rsa1.pub"
    node1.vm.provision "file", source: "id_rsa.pub", destination: "id_rsa2.pub"
    node1.vm.provision "shell", inline: $script
  end
end
